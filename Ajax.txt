------------------------------- //Ajax Laravel(Php) ----------------------------
  //View

 {{ csrf_field() }}   

 $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    }); 

 $.ajax({
     type: 'POST',
     url: '{{route('Support')}}',
     headers: {
         'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
     },
    data: {data1:inputvalue1},
   	 success: function (data) 
    	{
   	    alert(data.message);         
    	}
 });
\\View


 // Controller

	return response()->json(['status'=>1,'message'=>'Success.']);

 \\ Controller

-----// Setinterval Table Refresh every x Second
<div class="tab-pane active" id="tab1"></div>

setInterval(function () {
        $('#tab1').load('/Application/GetData?clientid=5');
        , 10000);



-----// Easy Post
$.post('/Home/DataPost',$("form").serialize(), function(data){
  //success
}

------------------------------- Ajax Laravel(Php)\\ -----------------------------


------------------------------- //Ajax ASP.NET MVC ------------------------------


---------------------------------------------------------------------------------------------------------------------------------------- Get Data

-----//Type1

@Ajax.ActionLink("Customer from Mexico", // <-- Text to display  
                 "Mexico", // <-- Action Method Name  
                 new AjaxOptions  
                 {  
                     UpdateTargetId="CustomerList", // <-- DOM element ID to update  
                     InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element  
                     HttpMethod = "GET" // <-- HTTP method  
                 })  
<div id="CustomerList"></div>  

-----Type1\\




----------------------------------------------------------------------------------------------------------------------------------------Get Data

-----//Type2

// View

@using (Ajax.BeginForm("Action", "Controller", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure"}))
{
//Form POST Data
}

<script type="text/javascript">
  function OnSuccess(data) {
  alert(data.message);
  }
  function OnFailure(data) {
  alert(0);
  }
</script>

\\View

// Controller

 return Json(new { message="Success",status=1}, JsonRequestBehavior.AllowGet);


\\ Controller


-----Type2\\




----------------------------------------------------------------------------------------------------------------------------------------Get Data

-----//Type3

// View

@using (Ajax.BeginForm("Action", "Controller", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "updatedDiv" }))
{
//Form POST Data
}

<div id="updatedDiv">
 @Html.Partial("_partitialView1", Model)
</div>


//_partitialView1.cshtml

@model Project.Models.Pagedlist

 <table style="width:2000px">
     <tr style="width:auto">
          <th>Name</th>
     </tr>
       @foreach (var item in Model)
        {
          <tr style="width:auto">
              <td>@item.Name</td>
          </tr>
        }
  </table>

//_partitialView1.cshtml


\\View

// Controller

 return PartialView("_partitialView1", model);


\\ Controller

-----Type3\\





----------------------------------------------------- Ajax Details ------------------------------------------------
-----//if request Ajax
 if (Request.IsAjaxRequest()) 
    {

        return PartialView("_TahsilciSenet", model);
    }
    else
    {
        return View(model);
    }
    // its for asp.net mvc.You can check if request ajax. for example, if you want to use only one action which its also view,you can use return View(model); 
    // Than you can manage every ajax request. 
    
    
    
----- //Jquery ajax request get Partitial
Note: if you use jquery for get partitialView, set --> dataType: 'html'



-----// Ajax AutoComplate text
//View
      $("input[name=nameText]").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Persons/NameList",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item
                            }

                        }))
                    },
                    messages: {
                        noResults: "", results: ""
                    }

                });
            }

        });
//Controller
  [HttpPost]
  public ActionResult NameList(string term)
  {
     var result = db.Table.Where(x => x.Name.Contains(term)).Select(x => x.Name).Distinct().ToList();
     return Json(result, JsonRequestBehavior.AllowGet);
  }



-----// Setinterval Table Refresh every x Second
<div class="tab-pane active" id="tab1"></div>

setInterval(function () {
        $('#tab1').load('/Application/GetData?clientid=5');
        , 10000);



-----// Easy Post
$.post('/Home/DataPost',$("form").serialize(), function(data){
  //success
}

------------------------------- Ajax  ASP.NET MVC\\ --------------------------------

